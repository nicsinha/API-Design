An application programming interface (API) is an intermediary through which two software components communicate to share data and to get useful work done.
As the name implies, exchanging information is possible because of the presence of a software interface between these components.
The software components can reside on the same or different machines connected through a network

API Gateway :

In a scenario where a client application must interact with multiple microservices at a time, a typical approach would be to make a separate API call for each microservice.
This impacts resource consumption, performance, and task time.
The API gateway comes in to help by acting as a single entry point for all the API requests. It sits between the microservices and clients, acting as a gateway.

The API gateway takes the client’s calls and routes them to the appropriate microservice by processing the parameters in composite API calls.
It retrieves the responses from all microservices and sends a unified response to the client’s requests.

API endpoints :

it’s required to define a mechanism for APIs to access the exact location where the service is being provided. We refer to those digital locations as the endpoints of APIs. 
In a communication channel, the endpoint is one end of a system we can reach with the help of a URL.

The endpoints are accessed by appending the endpoint name after the base URL of an API. 
For example, to request information about all the answers published on the Educative platform, 
the following endpoint is interacted with using an HTTP GET request

URL - https://www.educative.io/answers 
Endpoint - answer
Baseurl - https://www.educative.io
